[versions]
netty-transport = "4.1.68.Final"
androidx-lifecycle = "2.9.4"
composeHotReload = "1.0.0-beta07"
composeMultiplatform = "1.9.0"
junit = "4.13.2"
kotlin = "2.2.20"
kotlinx-coroutines = "1.10.2"
ktor = "3.3.0"
logback = "1.5.18"
hoplite = "2.7.5"
coil = "3.2.0"
androidx = "1.9.0"

[libraries]
netty-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty-transport" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-lifecycle-viewmodelCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serverCore = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-serverNetty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-serverTestHost = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-client-core = {module = "io.ktor:ktor-client-core", version.ref = "ktor"}
ktor-client-cio = {module = "io.ktor:ktor-client-cio", version.ref = "ktor"}
ktor-client-contentNegotiation = {module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"}
ktor-client-logging = {module = "io.ktor:ktor-client-logging", version.ref = "ktor"}
logback-classic = {module = "ch.qos.logback:logback-classic", version.ref = "logback"}
hoplite-core = {module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite"}
hoplite-hocon = {module = "com.sksamuel.hoplite:hoplite-hocon",version.ref = "hoplite"}
coil-core = {module = "io.coil-kt.coil3:coil-core", version.ref = "coil"}
coil-compose = {module = "io.coil-kt.coil3:coil-compose", version.ref = "coil"}
coil-network = {module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil"}

[plugins]
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
